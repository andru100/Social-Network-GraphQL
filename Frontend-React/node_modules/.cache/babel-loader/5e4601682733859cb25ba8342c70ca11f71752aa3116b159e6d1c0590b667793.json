{"ast":null,"code":"export default async function SendData(request, variables, isupload) {\n  // send comment or reply to comment depending on is replychk false/true\n  console.log(\"is uploud =\", isupload);\n  let GQLpayload = {\n    \"query\": request,\n    \"variables\": variables\n  };\n  let options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(GQLpayload)\n  };\n\n  // if (isupload === \"yes\") {\n  //     console.log(\"its a yeson isuplod\")\n  //     options = {\n\n  //         //mode: 'no-cors',\n  //         method: \"POST\",\n  //         body: GQLpayload\n  //     }\n  //     delete options.headers['Content-Type'];\n\n  // } \n\n  let postUrl = process.env.REACT_APP_BACKEND_ADDRESS + \"/query\"; /* + process.env.REACT_APP_BACKEND_PORT  */\n  let response = await fetch(postUrl, options);\n  let convert = await response.json();\n  console.log(\"response\", convert);\n  if (\"errors\" in convert) {\n    // if password is a match redirect to profile page\n    console.log(\"error sending data\", convert.errors);\n  } else {\n    return convert;\n  }\n}\n_c = SendData;\nvar _c;\n$RefreshReg$(_c, \"SendData\");","map":{"version":3,"names":["SendData","request","variables","isupload","console","log","GQLpayload","options","method","headers","body","JSON","stringify","postUrl","process","env","REACT_APP_BACKEND_ADDRESS","response","fetch","convert","json","errors"],"sources":["/home/andru/Code/Social-Monolyth-GQL/Frontend-React/src/routes/SendData.jsx"],"sourcesContent":["export default async function SendData (request, variables, isupload ) { // send comment or reply to comment depending on is replychk false/true\n    console.log(\"is uploud =\", isupload)\n\n    let GQLpayload = {\n        \"query\": request,\n        \"variables\":variables\n    }\n   \n    let options = {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(GQLpayload)\n    }\n\n    // if (isupload === \"yes\") {\n    //     console.log(\"its a yeson isuplod\")\n    //     options = {\n            \n    //         //mode: 'no-cors',\n    //         method: \"POST\",\n    //         body: GQLpayload\n    //     }\n    //     delete options.headers['Content-Type'];\n        \n    // } \n\n    let postUrl = process.env.REACT_APP_BACKEND_ADDRESS + \"/query\" /* + process.env.REACT_APP_BACKEND_PORT  */\n    let response = await fetch(postUrl, options)\n    let convert = await response.json ()\n\n    console.log(\"response\", convert)\n    \n    if ( \"errors\" in convert ){ // if password is a match redirect to profile page\n        console.log(\"error sending data\" , convert.errors )\n    } else {\n        return convert\n    }\n\n}"],"mappings":"AAAA,eAAe,eAAeA,QAAQ,CAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,EAAG;EAAE;EACrEC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,QAAQ,CAAC;EAEpC,IAAIG,UAAU,GAAG;IACb,OAAO,EAAEL,OAAO;IAChB,WAAW,EAACC;EAChB,CAAC;EAED,IAAIK,OAAO,GAAG;IACVC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACT,cAAc,EAAE;IAChB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,UAAU;EACnC,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,IAAIO,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,GAAG,QAAQ,EAAC;EAC/D,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,EAAEN,OAAO,CAAC;EAC5C,IAAIY,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAG;EAEpChB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEc,OAAO,CAAC;EAEhC,IAAK,QAAQ,IAAIA,OAAO,EAAE;IAAE;IACxBf,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAGc,OAAO,CAACE,MAAM,CAAE;EACvD,CAAC,MAAM;IACH,OAAOF,OAAO;EAClB;AAEJ;AAAC,KAxC6BnB,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}