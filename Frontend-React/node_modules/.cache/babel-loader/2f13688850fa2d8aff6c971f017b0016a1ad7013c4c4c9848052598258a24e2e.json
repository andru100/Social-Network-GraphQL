{"ast":null,"code":"import SendData from './routes/SendData';\nexport default async function Chkauth() {\n  //check if user has valid jwt\n  let jwt = localStorage.getItem('jwt_token');\n  let jwtObject = {\n    data: {\n      Token: jwt\n    }\n  };\n  let gqlRequest = \"query Chkauth ($data: JwtdataInput!){ Chkauth(input: $data) { AuthdUser } }\";\n  let response = await SendData(gqlRequest, jwtObject, 'chkauth');\n  if (response) {\n    // if password is a match redirect to profile page\n    console.log(\"auth is \", response.data.Chkauth.AuthdUser);\n    return response.data.Chkauth.AuthdUser;\n  } else {\n    return false;\n  }\n}\n_c = Chkauth;\nvar _c;\n$RefreshReg$(_c, \"Chkauth\");","map":{"version":3,"names":["SendData","Chkauth","jwt","localStorage","getItem","jwtObject","data","Token","gqlRequest","response","console","log","AuthdUser"],"sources":["/home/andru/Code/Social-Monolyth-GQL/Frontend-React/src/chkAuth.jsx"],"sourcesContent":["import SendData from './routes/SendData';\n\nexport default async function Chkauth (){ //check if user has valid jwt\n    let jwt = localStorage.getItem('jwt_token');\n\n    let jwtObject = {\n      data: {\n        Token: jwt\n      }  \n    }\n\n    let gqlRequest = \"query Chkauth ($data: JwtdataInput!){ Chkauth(input: $data) { AuthdUser } }\"\n\t\t\n\t\tlet response = await SendData(gqlRequest, jwtObject, 'chkauth')\n\n    if ( response ){ // if password is a match redirect to profile page\n\t\t\tconsole.log(\"auth is \", response.data.Chkauth.AuthdUser)\n\n      return response.data.Chkauth.AuthdUser\n\t\t} else {\n      return false\n    }\n} "],"mappings":"AAAA,OAAOA,QAAQ,MAAM,mBAAmB;AAExC,eAAe,eAAeC,OAAO,GAAG;EAAE;EACtC,IAAIC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE3C,IAAIC,SAAS,GAAG;IACdC,IAAI,EAAE;MACJC,KAAK,EAAEL;IACT;EACF,CAAC;EAED,IAAIM,UAAU,GAAG,6EAA6E;EAEhG,IAAIC,QAAQ,GAAG,MAAMT,QAAQ,CAACQ,UAAU,EAAEH,SAAS,EAAE,SAAS,CAAC;EAE7D,IAAKI,QAAQ,EAAE;IAAE;IAClBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAACH,IAAI,CAACL,OAAO,CAACW,SAAS,CAAC;IAErD,OAAOH,QAAQ,CAACH,IAAI,CAACL,OAAO,CAACW,SAAS;EAC1C,CAAC,MAAM;IACH,OAAO,KAAK;EACd;AACJ;AAAC,KApB6BX,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}